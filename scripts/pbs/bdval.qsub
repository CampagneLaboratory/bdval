#!/bin/sh

# Determines the queue a job is submitted to
#PBS -q @PBS-QUEUE@

# Name of the job
#PBS -N @JOB-NAME@

# Combine PBS error and output files.
#PBS -j oe

# Save PBS output to the result directory
#PBS -o @JOB-DIR@/../@JOB-NAME@.^array_index^.log

# Number of nodes (exclusive access)
#PBS -l nodes=1#excl

# Mail job status at completion
#PBS -m ae

# TODO - Mail to user specified
##PBS -M mas2062@med.cornell.edu

# TODO - Handle the case where there is only one task which cannot be an array
# Submit as a job array
#PBS -J 1-@PBS-TASKS@

# TODO - use stagein/stageout
##PBS -W stagein=dat1@server:/u/user1/grid.dat

#
# Output some useful job information
#
echo ------------------------------------------------------
echo Job is running on the following nodes:
cat $PBS_NODEFILE
echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: task number is $PBS_TASKNUM
echo PBS: node number is $PBS_NODENUM
echo PBS: node file is $PBS_NODEFILE
echo PBS: array index is $PBS_ARRAY_INDEX
echo PBS: current home directory is $PBS_O_HOME
echo PBS: scratch directory is $TMPDIR
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------

# Copy needed files from master node to each worker
for node in `sort $PBS_NODEFILE | uniq`
do
  echo "=============================================="
  echo "Copying files to $node"
  echo "=============================================="
  scp -pr @@MASTER-NODE@:@JOB-DIR@ @$node:$TMPDIR/@JOB-NAME@
done

#
# Start instances of Rserve on each node in the cluster
#
echo "=============================================="
echo "Starting Rserve instances"
echo "=============================================="
# TODO - start instances based on the number of cpus
pbsdsh -v $TMPDIR/@JOB-NAME@/start-rserve.sh 6311
pbsdsh -v $TMPDIR/@JOB-NAME@/start-rserve.sh 6312

# TODO - remove this block it's just for testing (bdval will do this anyway)
for node in `sort $PBS_NODEFILE | uniq`
do
  ssh $node "java -jar /home/marko/RUtils/icb-rutils.jar --port 6311 --validate"
  ssh $node "java -jar /home/marko/RUtils/icb-rutils.jar --port 6312 --validate"

  ssh $node "ps -elf | grep $USER"
done

# launch bdval on each node
pbsdsh -v $TMPDIR/@JOB-NAME@/bdval-pbs.sh

#
# Start instances of Rserve on each node in the cluster
#
echo "=============================================="
echo "Stopping Rserve instances"
echo "=============================================="
pbsdsh -v $TMPDIR/@JOB-NAME@/stop-rserve.sh 6311
pbsdsh -v $TMPDIR/@JOB-NAME@/stop-rserve.sh 6312
