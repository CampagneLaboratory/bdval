<?xml version="1.0"?>
<project name="release" basedir="." default="release">
    <import file="${basedir}/buildsupport/build.xml"/>

    <property name="label" value="release"/>
    <property file="${config}/release.properties"/>

    <tstamp>
        <format property="exportdate" pattern="yyyyMMddHHmmss"/>
    </tstamp>

	<target name="init" depends="gettag">
	    <property name="exportdir" value="tmp-${tag}"/>
		<property name="releasedir" value="release-${tag}"/>

    	<mkdir dir="${releasedir}"/>

	    <property name="srcfile" value="${releasedir}/${tag}-src.zip"/>
        <property name="depsfile" value="${releasedir}/${tag}-deps.zip"/>
	    <property name="apidocfile" value="${releasedir}/${tag}-apidoc.zip"/>
	    <property name="datafile" value="${releasedir}/${tag}-data.zip"/>
        <property name="bdval-binary-zipfile" value="${releasedir}/${tag}-bdval.zip"/>
        <property name="tagUrl" value="https://${svnhost}/public/svn/icb/tags/${tag}"/>
	</target>

	<target name="gettag" unless="tag">
	    <!-- the default tag uses the current date and time -->
	    <property name="defaulttag" value="bdval_${exportdate}"/>

        <input message="Enter a tag for the build [${defaulttag}]:"
               addproperty="tag"
               defaultvalue="${defaulttag}"/>
        <echo level="debug" message="tag is ${tag}"/>
    </target>

	<target name="tag" depends="init" unless="nocopy" description="Tag the current trunk release in SVN">
        <echo level="info" message="Tagging current directory with ${tag}"/>
    	<svn>
    		<copy message="${tag}" srcUrl="https://${svnhost}/public/svn/icb/trunk/bdval"
    			  destUrl="${tagUrl}"/>
    	</svn>
    </target>

    <target name="export" depends="init" unless="noexport" description="Export a tagged version of the source code">
        <available property="exportdirexists" file="${exportdir}" type="dir"/>
        <fail if="exportdirexists" message="${basedir}/${exportdir} already exists."/>

    	<mkdir dir="${exportdir}"/>
        <echo level="info" message="Exporting using tag: ${tag}"/>

        <!-- get the tagged version from svn -->
    	<svn>
    		<export srcUrl="${tagUrl}" destPath="${exportdir}/${tag}"/>
            <export srcUrl="https://${svnhost}/public/svn/icb/data/bdval" destPath="${exportdir}/${tag}/data/bdval"/>
        </svn>
    </target>

    <target name="release" description="Tag and release build"
	    	depends="tag, source, jar, data, dependencies, javadoc, bdval">

        <!-- copy the zip to the web folder -->
        <!-- todo -->
        <!-- notify webmaster about new file -->
        <!-- todo -->

        <!-- delete the temp files to clean up -->
        <!--<delete dir="${exportdir}"/>-->
    </target>

	<target name="source" depends="export" description="Assemble a source code release">
        <!-- copy configuration files so tests run "out of the box" -->
        <copy file="${exportdir}/${tag}/config/log4j.properties.sample"
              tofile="${exportdir}/${tag}/config/log4j.properties"
              overwrite="false" failonerror="true"/>
        <copy file="${exportdir}/${tag}/config/RConnectionPool.xml.sample"
              tofile="${exportdir}/${tag}/config/RConnectionPool.xml"
              overwrite="false" failonerror="true"/>

        <zip destfile="${srcfile}" comment="BDVal version: ${tag}">
            <!-- don't include all the libraries and data -->
        	<fileset dir="${exportdir}">
                <exclude name="${tag}/data/**"/>
                <exclude name="${tag}/lib/**"/>
                <exclude name="${tag}/config/*local*"/>
                <!-- BMF package is NOT GPL - do not include with the distribution -->
                <exclude name="${tag}/src/org/bdval/modelselection/bmf/**"/>
                <exclude name="${tag}/test-src/org/bdval/modelselection/bmf/**"/>
			</fileset>
            <!-- include enough data to run the unit tests -->
            <fileset dir="${exportdir}">
                <include name="${tag}/test-data/**"/>
            </fileset>
       	</zip>

        <!-- delete the configuration files after the zip file is created -->
        <delete>
            <fileset dir="${exportdir}/${tag}/config">
                <include name="log4j.properties"/>
                <include name="RConnectionPool.xml"/>
            </fileset>
        </delete>
	</target>

	<target name="data" depends="export" description="Assemble a data release">
        <zip destfile="${datafile}" comment="BDVal version: ${tag}">
        	<fileset dir="${exportdir}">
        		<include name="${tag}/data/**"/>
                <exclude name="${tag}/data/*confidential*"/>
        	</fileset>
        </zip>
	</target>

    <target name="dependencies" depends="export" description="Assemble dependency release">
        <zip destfile="${depsfile}" comment="BDVal version: ${tag}">
        	<fileset dir="${exportdir}">
        		<include name="${tag}/lib/**"/>
        	</fileset>
        </zip>
    </target>

	<target name="javadoc">
        <!-- run the java docs -->
        <ant target="javadoc" dir="${exportdir}/${tag}">
            <property name="classes" location="${exportdir}/${tag}/classes"/>
            <property name="config" location="${exportdir}/${tag}/config"/>
            <property name="javadocs" location="${exportdir}/${tag}/javadocs"/>
            <property name="lib" location="${exportdir}/${tag}/lib"/>
            <property name="logs" location="${exportdir}/${tag}/logs"/>
            <property name="src" location="${exportdir}/${tag}/src"/>
        </ant>

        <!-- zip the api documentation for the website -->
        <zip destfile="${apidocfile}" basedir="${exportdir}" includes="${tag}/javadocs/**" comment="BDVal version: ${tag}"/>
	</target>

	<target name="jar" depends="export" description="create and package the jar files">
        <ant target="jar" dir="${exportdir}/${tag}">
        	<property name="buildstamp" value="${tag}"/>
            <property name="classes" location="${exportdir}/${tag}/classes"/>
            <property name="config" location="${exportdir}/${tag}/config"/>
            <property name="lib" location="${exportdir}/${tag}/lib"/>
            <property name="logs" location="${exportdir}/${tag}/logs"/>
            <property name="src" location="${exportdir}/${tag}/src"/>
       	</ant>
        <!-- note: the copy is important, the bdval target will look for it -->
        <copy file="${exportdir}/${tag}/bdval.jar" todir="${releasedir}"/>
        <move file="${exportdir}/${tag}/bdval-api.jar" todir="${releasedir}"/>
	</target>

    <target name="bdval" description="Create the distribtion for BDVal">
        <!-- for the release, we don't want to require compilation -->
        <replace file="${exportdir}/${tag}/data/bdval.properties" summary="true"
                 token="use-bdval-jar=false" value="use-bdval-jar=true"/>
        <concat destfile="${exportdir}/${tag}/data/bdval.properties" append="true" fixlastline="true">nocompile=true</concat>

        <!-- dataset configuration for the prostate example -->
        <copy file="${exportdir}/${tag}/data/templates/bdval-template-local.properties" tofile="${exportdir}/${tag}/config/prostate-example-local.properties">
            <filterset begintoken="&lt;" endtoken="&gt;">
                <filter token="dataset-root" value="bdval/GSE8402"/>
                <filter token="bdval" value="prostate example"/>
            </filterset>
        </copy>

        <!-- dataset configuration for the synthetic example -->
        <copy file="${exportdir}/${tag}/data/templates/bdval-template-local.properties" tofile="${exportdir}/${tag}/config/synthetic-local.properties">
            <filterset begintoken="&lt;" endtoken="&gt;">
                <filter token="dataset-root" value="synthetic"/>
                <filter token="bdval" value="synthetic"/>
            </filterset>
        </copy>

        <!-- log4j -->
        <copy file="${exportdir}/${tag}/config/log4j.properties.sample" tofile="${exportdir}/${tag}/config/log4j.properties"
              overwrite="true" failonerror="false"/>

        <!-- Rserve configuration -->
        <copy file="${exportdir}/${tag}/config/RConnectionPool.xml.sample" tofile="${exportdir}/${tag}/config/RConnectionPool.xml"
              overwrite="true" failonerror="false"/>

        <zip destfile="${bdval-binary-zipfile}" comment="BDVal version: ${tag}">
        	<fileset dir="${exportdir}">
                <include name="${tag}/README-BDVal.txt"/>
                <include name="${tag}/data/bdval/**"/>
                <include name="${tag}/data/sequences/**"/>
                <include name="${tag}/data/templates/**"/>
                <include name="${tag}/data/bdval.*"/>
                <include name="${tag}/data/gene-lists/**"/>
                <include name="${tag}/data/prostate-example.*"/>
                <include name="${tag}/data/synthetic.*"/>
                <include name="${tag}/buildsupport/**"/>
                <include name="${tag}/bdval.jar"/>
                <include name="${tag}/config/log4j.properties"/>
                <include name="${tag}/config/prostate-example-local.properties"/>
                <include name="${tag}/config/synthetic-local.properties"/>
                <include name="${tag}/config/RConnectionPool.xml"/>
            </fileset>
        </zip>
    </target>
</project>
